### Ejemplo de configuración para PostgreSQL en la nube
# NO introducir credenciales reales en este archivo del repositorio.
# Usar variables de entorno o un archivo `.env` local (no comiteado).


# Datasource - preferimos leer desde las variables de entorno que proveen plataformas
# Si usas Supabase, copia la "JDBC connection string" que proporciona la UI de Supabase
# y pégala en SPRING_DATASOURCE_URL. Supabase normalmente requiere SSL (sslmode=require).
# Ejemplo de JDBC (Supabase):
# jdbc:postgresql://db.abcd1234.supabase.co:5432/postgres?sslmode=require
# Soporta también variables específicas para Supabase (opcional): SUPABASE_JDBC_URL
spring.datasource.url=${SPRING_DATASOURCE_URL:${SUPABASE_JDBC_URL:jdbc:postgresql://localhost:5432/bienestar?sslmode=require}}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:postgres}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:password}

# JPA / Hibernate
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Pool (HikariCP)
spring.datasource.hikari.maximum-pool-size=10

# Seguridad y perfiles
spring.profiles.active=cloud

# Flyway migrations: enable to apply migrations automatically at startup in cloud
# You can set SPRING_FLYWAY_ENABLED=false to disable automatic migrations.
spring.flyway.enabled=${SPRING_FLYWAY_ENABLED:true}
spring.flyway.locations=classpath:db/migration

# Logging (opcional)
logging.level.org.springframework=INFO
logging.level.com.bienestarproyect=DEBUG
